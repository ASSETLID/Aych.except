.TH OCAMLEXCC 1

.SH NAME
ocamlexcc 1.0 \- The Objective Caml first pass for uncaught exceptions
analyzer.


.SH SYNOPSIS
.B ocamlexcc
[
.BI \-nopervs
.BI \-I \ lib-dir
]
.I filename


.SH DESCRIPTION

The
.BR ocamlexcc (1)
command is the first pass for the Objective Caml uncaught exceptions
analyzer (analyzing pass). This command is invocated with the name of
the Objective source file to analyze.

.SH OPTIONS

The following command-line options are recognized by
.BR ocamlexcc (1).

.TP
.BI \-I \ directory
Add the given directory to the list of directories searched for
pre-analyzed files. Directories added with 
.B \-I
are searched in the order in which they were given on the command
line. By default, only the current directory is searched. This means
that the path to the pre-analyzed files of standard library must be
explicitly specified if you are not working in it.
The 'Pervasives.cme' file is searched first in this path. This file
contains the result of the analysis for basic definitions used by
Ocaml (I mean, +, -, !, ref, type definitions as 'ref', external
functions, ...). Basically, these definitions are needed by any
program written in Ocaml, unless it use only the core language (this
means no input/output, no arithmetic computations, so approximatively
the only behavior is ... 'do nothing very interesting'...). It is
possible to turn off the loading of this 'Pervasives.cme' if needed
(see below).

.TP
.B \-nopervs
This option prevents the system to search for the 'Pervasives.cme'
file. This can be used, for example when analyzing the 'Pervasives.ml'
file itself (although this is automatically done by the analyzer if it
sees that the file it is currently feeded in is called
'Pervasives.ml'). This feature may be used by the user if he really
need it. Actually this should not occur very often.


.SH THE BASIC PROCEDURE TO ANALYZE A PROGRAM
The exception analysis is splitted in two passes. First, each source
file of the program must be pre-analyzed in a separate way, using the
.BR ocamlexcc
command. This generates '.cme' files ('foo.ml' will be analyzed and a
file called 'foo.cme' will be generated) that contain the partial
result of the uncaught exceptions analysis. The complete analysis
results cannot yet be known because they can depend on the results of
the analysis for the others files. However, once a file has been
analyzed, so long it does not change there is no need to re-analyze
it.
Once all the source files of the program are analyzed, it is possible
to get the final result of the analysis by applying the "linking"
pass. This is achieved by using either the
.BR ocamlexcl
or
.BR ocamlexcli
command. For more details on these command, please consult the
dedicated man page. These two commands perform basically the same
thing : merging all the partial results coming from the '.cme' files
previously generated by
.BR ocamlexcc
and displaying the result of the analysis. The first command displays
this result as text on the standard output. The second provides the
user a graphical browser, menu-window-mouse-driven. This second way to
look at the result of the analysis is much more convenient. It
provides several features to help reading types of the program, by
allowing folding/unfolding of these types (that can be really be big).


.SH SEE ALSO
.BR ocamlexcc (1),
.BR ocamlexcl (1),
.BR ocamlexcli (1),
.BR ocamlexc (1).
.br
.I The Objective Caml user's manual,
for the general Objective Caml language description.
.br
.I Type-based analysis of uncaught exceptions
by Francois Pessaux and Xavier Leroy - POPL99.
